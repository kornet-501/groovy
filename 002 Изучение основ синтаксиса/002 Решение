Переменные и типы данных:

    def name = "Данил"
    def age = 24
    def height = 180
    def favoriteColor = "Space"
    println "Меня зовут $name, мне $age года, мой рост $height см, и мой любимый цвет $favoriteColor."

Условные выражения:

Задача №1

// Импорт класса Scanner из пакета java.util.Scanner
import java.util.Scanner // Используется для чтения пользовтельского ввода


// Создание объекта Scanner для ввода данных
def scanner = new Scanner(System.in) // Здесь создается новый объект Scanner с именем scanner, который будет использоваться для считывания пользовательского ввода с помощью стандартного потока ввода (System.in)

// Запрос ввода числа от пользователя
println("Введите число:")
def number = scanner.next() // Эта строка считывает следующее введенное пользователем значение и сохраняет его в переменную number. Метод next() объекта Scanner считывает следующее слово или значение, введенное пользователем, до тех пор, пока не будет введен пробел или символ новой строки.

// Проверка, является ли введенное значение числом. Здесь используется конструкция if-else для проверки введенного значения.
if (number.isFloat()) {
    // Преобразование строки в число типа float и сохраняется в переменной num
    def num = Float.parseFloat(number)

    // Проверка условий и вывод соответствующего сообщения
    if (num > 0) {
        println("Число $num является положительным.")
    } else if (num < 0) {
        println("Число $num является отрицательным.")
    } else {
        println("Число $num является нулём.")
    }
} else {
    println("Ошибка: Введенное значение не является числом.")
}

// Программа проверяет, является ли число положительным, отрицательным или нулем с помощью последовательности if-else if-else, и выводит соответствующее сообщение.
// Если введенное значение не является числом, программа переходит к этому блоку else.

Задача №2

// Номер дня недели (1 - понедельник, 2 - вторник и т.д.)
def dayOfWeek = 3 // Здесь мы создаем переменную dayOfWeek и присваиваем ей значение 3, что соответствует среде (среда).

// Проверка номера дня недели и вывод соответствующего названия
switch (dayOfWeek) {
    case 1:
        println("Понедельник")
        break
    case 2:
        println("Вторник")
        break
    case 3:
        println("Среда")
        break
    case 4:
        println("Четверг")
        break
    case 5:
        println("Пятница")
        break
    case 6:
        println("Суббота")
        break
    case 7:
        println("Воскресенье")
        break
    default:
        println("Некорректный номер дня недели")
        break
}

// В этой части кода мы используем оператор switch, чтобы проверить значение переменной dayOfWeek. Каждый case соответствует одному из дней недели, а default обрабатывает ситуацию, когда значение dayOfWeek не соответствует ни одному из ожидаемых номеров дней недели.

// Если dayOfWeek равно 1, программа выводит "Понедельник".
// Если dayOfWeek равно 2, программа выводит "Вторник".
// Если dayOfWeek равно 3, программа выводит "Среда".
// И так далее, до дня недели "Воскресенье" для значения 7.
// Ключевое слово break используется для завершения проверки в switch после выполнения соответствующего case, чтобы избежать выполнения остальных проверок.

// Если dayOfWeek не равно ни одному из ожидаемых значений (от 1 до 7), то будет выполнен блок default, который выводит сообщение "Некорректный номер дня недели".

// Таким образом, в результате выполнения этого кода на экран будет выведено "Среда", так как значение переменной dayOfWeek равно 3.

Задача №2.1

// Перепишем код, используя цикл while, чтобы пользователь мог вводить номер дня недели несколько раз:

def scanner = new Scanner(System.in) // Создание объекта Scaner. Здесь создается новый объект Scanner с именем scanner, который будет использоваться для считывания пользовательского ввода с помощью стандартного потока ввода (System.in).

while (true) { // Цикл while для запроса ввода дня недели. Это бесконечный цикл, который будет продолжаться до тех пор, пока не будет выполнено условие для выхода из него (в данном случае, с помощью оператора break).

    println("Введите номер дня недели (1 - понедельник, 2 - вторник и т.д.):") // Запрос ввода номера дня недели. Здесь программа запрашивает у пользователя ввести номер дня недели. Пользовательский ввод считывается с помощью метода nextInt() объекта scanner и сохраняется в переменной dayOfWeek.
    def dayOfWeek = scanner.nextInt()

    switch (dayOfWeek) { // Конструкция switch-case для определения дня недели. В этой части кода используется конструкция switch-case, чтобы определить, какой день недели соответствует введенному пользователем числу. Для каждого возможного значения dayOfWeek указано соответствующее действие (например, вывод названия дня недели).
        case 1:
            println("Понедельник")
            break
        case 2:
            println("Вторник")
            break
        case 3:
            println("Среда")
            break
        case 4:
            println("Четверг")
            break
        case 5:
            println("Пятница")
            break
        case 6:
            println("Суббота")
            break
        case 7:
            println("Воскресенье")
            break
        default:
            println("Некорректный номер дня недели")
    }

    println("Хотите ввести еще один день? (yes/no):") // Запрос на продолжение. После того как программа определит день недели и выведет его на экран, она спрашивает пользователя, хочет ли он продолжить вводить дни недели.
    def response = scanner.next()
    if (response.toLowerCase() != "yes") { // Проверка ответа пользователя и выход из цикла. Если пользователь вводит что-то, отличное от "yes" (в любом регистре), цикл завершается с помощью оператора break, и программа завершается.
        break
    }
}

Циклы:

Задача № 1

// цикл for для вывода таблицы умножения на 7

for (int i = 1; i <= 10; i++) { // используем цикл for, чтобы перебрать числа от 1 до 10.
    def result = 7 * i // На каждой итерации умножаем число (i) на 7 и сохраняем результат в переменную result.
    println("7 * $i = $result") // Затем выводим строку, которая показывает умножение 7 на текущее число i, а также результат этого умножения.
}

Задача № 2

// Создаем объект Scanner для ввода данных
def scanner = new Scanner(System.in) // Здесь создается новый объект Scanner с именем scanner, который будет использоваться для считывания пользовательского ввода с помощью стандартного потока ввода (System.in).

// Запрашиваем у пользователя ввод целого числа
println("Введите целое число:") // Здесь программа выводит на экран сообщение "Введите целое число:" с помощью println(), а затем считывает целое число, введенное пользователем, с помощью метода nextInt() объекта scanner. Введенное число сохраняется в переменной userInput.
def userInput = scanner.nextInt()

// Выводим на экран числа от 1 до введенного пользователем числа
println("Числа от 1 до $userInput включительно:") // В этой части кода используется цикл for, чтобы вывести на экран все числа от 1 до введенного пользователем числа включительно. В начале цикла переменная i инициализируется значением 1. Условие i <= userInput гарантирует, что цикл будет выполняться, пока значение i не станет больше введенного пользователем числа. На каждой итерации цикла выводится текущее значение переменной i с помощью функции println(). Затем значение i увеличивается на 1 с помощью оператора ++, что позволяет перейти к следующему числу в последовательности.
for (int i = 1; i <= userInput; i++) {
    println(i)
}

Методы и функции:

Задача № 1

def calculateSum(int num1, int num2) { // имя метода
    def sum = num1 + num2 // выражение, которое складывает два переданных аргумента и сохраняет результат в переменной sum
    return sum // оператор return, который возвращает сумму num1 и num2 в вызывающий код
}

// Проверка и вызов метода calculateSum с аргументами 5 и 3
def result = calculateSum(5, 3)
println("Сумма: $result")

Задача № 2

def calculateFactorial(int number) {
    if (number < 0) {
        return "Факториал не определен для отрицательных чисел"
    } else if (number == 0 || number == 1) {
        return 1
    } else {
        def factorial = 1
        for (int i = 2; i <= number; i++) {
            factorial *= i
        }
        return factorial
    }
}

// Пример вызова функции calculateFactorial
def result = calculateFactorial(5)
println("Факториал числа 5: $result")

