Для создания нового Groovy-скрипта в IntelliJ IDEA выполните следующие шаги:

Откройте IntelliJ IDEA и перейдите в свой проект.
В дереве проекта (Project View) выберите папку или пакет, в котором вы хотите создать новый скрипт.
Нажмите правой кнопкой мыши на выбранной папке или пакете и выберите опцию "New" (Новый) -> "Groovy Script" (Groovy-скрипт).
В появившемся диалоговом окне введите имя для вашего скрипта, например, HelloWorld.
Нажмите "OK", чтобы создать новый Groovy-скрипт.

Разберем простейший код на Groovy:

static void main(String[] args) { // Это объявление метода main, который является входной точкой выполнения программы. Этот метод принимает массив строк (args) в качестве аргументов и ничего не возвращает (void). Он также объявлен как static, что означает, что он принадлежит классу, а не конкретному экземпляру объекта.
    println "Hello world!!!" // println "Hello world!!!": Эта строка выводит текст "Hello world!!!" на консоль. println - это метод для вывода текста на консоль с добавлением символа новой строки в конце.
}

В Groovy вы можете написать код без явного указания на класс, но если вы хотите создать файл с точкой входа, аналогичной Java-классу с методом main, вы можете сделать это следующим образом:

// Название вашего файла.groovy
def main(args) { // main - это имя метода, а args - это аргументы командной строки, как в Java. Просто поместите этот код в файл с расширением .groovy, и он будет исполняемым.
    println "Hello, World!"
}

Это эквивалент Java-класса с методом main. Если вы хотите, чтобы ваш Groovy-скрипт содержал дополнительные классы и методы, вы можете добавить их как обычно. Например:

// Название вашего файла.groovy
class MyClass { // MyClass - это класс, а greet - его метод.
    def greet(name) {
        println "Hello, $name!"
    }
}

def main(args) { // Метод main в этом скрипте выполняет те же функции, что и в Java - это точка входа в программу.
    def myObject = new MyClass()
    myObject.greet("World")
}
